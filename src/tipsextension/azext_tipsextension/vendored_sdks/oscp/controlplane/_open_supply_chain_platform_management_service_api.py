# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.2.1, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any

    from azure.core.pipeline.transport import HttpRequest, HttpResponse

from ._configuration import OpenSupplyChainPlatformManagementServiceAPIConfiguration
from .operations import UserRPWorkspaceOperations
from .operations import UserRPWorkspaceShareOperations
from .operations import UserRPWorkspaceShareSubscriptionOperations
from .operations import ShareInviteOperations
from . import models


class OpenSupplyChainPlatformManagementServiceAPI(object):
    """Open Supply Chain Platform Management Service API.

    :ivar user_rp_workspace: UserRPWorkspaceOperations operations
    :vartype user_rp_workspace: oscp.controlplane.operations.UserRPWorkspaceOperations
    :ivar user_rp_workspace_share: UserRPWorkspaceShareOperations operations
    :vartype user_rp_workspace_share: oscp.controlplane.operations.UserRPWorkspaceShareOperations
    :ivar user_rp_workspace_share_subscription: UserRPWorkspaceShareSubscriptionOperations operations
    :vartype user_rp_workspace_share_subscription: oscp.controlplane.operations.UserRPWorkspaceShareSubscriptionOperations
    :ivar share_invite: ShareInviteOperations operations
    :vartype share_invite: oscp.controlplane.operations.ShareInviteOperations
    :param str base_url: Service URL
    """

    def __init__(
        self,
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        base_url = 'None'
        self._config = OpenSupplyChainPlatformManagementServiceAPIConfiguration(**kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.user_rp_workspace = UserRPWorkspaceOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user_rp_workspace_share = UserRPWorkspaceShareOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user_rp_workspace_share_subscription = UserRPWorkspaceShareSubscriptionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_invite = ShareInviteOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def _send_request(self, http_request, **kwargs):
        # type: (HttpRequest, Any) -> HttpResponse
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.HttpResponse
        """
        http_request.url = self._client.format_url(http_request.url)
        stream = kwargs.pop("stream", True)
        pipeline_response = self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> OpenSupplyChainPlatformManagementServiceAPI
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
